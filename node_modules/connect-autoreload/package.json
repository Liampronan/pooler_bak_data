{
  "name": "connect-autoreload",
  "description": "Autoreload server - watches your files for changes and handles client polling.",
  "repository": {
    "type": "git",
    "url": "https://github.com/typpo/connect-autoreload.git"
  },
  "version": "0.0.2",
  "author": {
    "name": "Ian Webster",
    "email": "ian_npm@ianww.com",
    "url": "http://ianww.com"
  },
  "engines": [
    "node"
  ],
  "dependencies": {
    "chokidar": ">=0.6.3"
  },
  "license": "MIT",
  "main": "./index.js",
  "readme": "connect-autoreload\n-----------------\n\nconnect-autoreload supports a basic javascript client that reloads the page whenever files are changed.  This is useful if you're a frontend developer and you're sick of manually refreshing the page to reflect your changes.\n\n## Installation\n\n`npm install connect-autoreload`, or add connected-autoreload to your package.json.\n\n## Setup\n\nSee the standalone app in `example/`.  Edit the config, start the server (`node path/to/app.js`), drop in the js, and you're good to go.\n\n### Adding autoreload to an existing server\n\nIf you already have an express app, it's easy to add autoreload middleware:\n\n    var autoreload = require('connect-autoreload')\n\n    var config = {\n      watch_dirs: 'js html css/compiled thirdparty/frontend',\n      ignore_regex: /\\.sw[poax]$/,\n    };\n\n    app.use(autoreload(config));\n\nThis will set up the default endpoint, `waitForReload/`.\n\nIt's recommend to start the node app from your project's root directory.  That way, `watch_dirs` will correctly work with relative paths.  `examples/start.sh` is a shorthand for this if you use git.\n\n### Including the Javascript client\n\n`<script src=\"http://localhost:60000/autoreload.js\"></script>` or include `js/autoreload.js` on your page.\n\nTo start reloading the page when changes happen, call `AutoReload.watch('http://localhost:8080')` (change the port to whichever the autocomplete server is running on).\n\nYou can call `AutoReload.stop()` at any point to cancel the refresh-on-change behavior.\n\n## https setup\n\nIf your web server requires an https connection, your connect app must have a valid cert or your browser will choke.\n\nIf you are running a separate web server, it might be annoying to set up the dummy autoreload node app with your cert.  Instead, you can proxy via Apache or nginx -\n\nExample Apache config using ProxyPass:\n\n    ProxyPass /waitForReload http://localhost:60000/waitForReload\n\nExample nginx config:\n\n    location /waitForReload {\n      proxy_pass      http://localhost:60000/waitForReload\n    }\n\n\n## MIT License\n\n```\nCopyright (c) 2013 Ian Webster/Room 77, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n",
  "readmeFilename": "README.md",
  "_id": "connect-autoreload@0.0.2",
  "dist": {
    "shasum": "f02a49a1ce4bc40ec596df25734b790fd46d0704",
    "tarball": "http://registry.npmjs.org/connect-autoreload/-/connect-autoreload-0.0.2.tgz"
  },
  "_npmVersion": "1.2.0",
  "_npmUser": {
    "name": "ianw",
    "email": "ianw_npm@ianww.com"
  },
  "maintainers": [
    {
      "name": "ianw",
      "email": "ianw_npm@ianww.com"
    }
  ],
  "directories": {},
  "_shasum": "f02a49a1ce4bc40ec596df25734b790fd46d0704",
  "_from": "connect-autoreload@*",
  "_resolved": "https://registry.npmjs.org/connect-autoreload/-/connect-autoreload-0.0.2.tgz"
}
